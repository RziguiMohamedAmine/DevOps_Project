pipeline {
    agent any

    tools {
        jdk 'JAVA_HOME'
        maven 'M2_HOME'  // Use the correct tool name defined in Jenkins
    }
    environment {
        GIT_REPO = 'https://github.com/RziguiMohamedAmine/DevOps_Project.git'
        GIT_CREDENTIAL_ID = 'Jenkins'
        BRANCH_NAME = 'activityModule'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: GIT_CREDENTIAL_ID, usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
                        dir('DevOps_Project') {
                            checkout([$class: 'GitSCM', branches: [[name: "$BRANCH_NAME"]], userRemoteConfigs: [[url: "$GIT_REPO", credentialsId: GIT_CREDENTIAL_ID]]])
                        }
                    }
                }
            }
        }

        stage('Compile') {
             steps {
                  script {
                   
                    def mavenTool = tool name: 'M2_HOME', type: 'maven'

                    withEnv(["PATH+MAVEN=${mavenTool}/bin"]) {
                     
                    dir('DevOps_Project') {
                    sh 'mvn compile'
                    }
                    }
                        }
                    }
                        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool name: 'SonarScanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                    withSonarQubeEnv('sonarqube') {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        }



    //     stage('Clean and Build') {
    //         steps {
    //             script {
    //                 // Use the 'M2_HOME' tool defined in the 'tools' section
    //                 def mavenTool = tool name: 'M2_HOME', type: 'maven'

    //                 withEnv(["PATH+MAVEN=${mavenTool}/bin"]) {
    //                     dir('DevOps_Project') {
    //                     sh 'mvn clean package'
    //                     }
    //                 }
    //             }
    //         }
    //     }
    // }
}
}

