pipeline {
    agent any

    tools {
        jdk 'JAVA_HOME'
        maven 'M2_HOME'  // Use the correct tool name defined in Jenkins
    }
    environment {
        BRANCH_NAME = 'operatorModule'
        GIT_CREDENTIAL_ID = 'ZM'
        GIT_REPO = 'https://github.com/RziguiMohamedAmine/DevOps_Project.git'
    }

    stages {
        stage('GIT HUB CHECKOUT') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: GIT_CREDENTIAL_ID, usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
                        dir('DevOps_Project') {
                            checkout([$class: 'GitSCM', branches: [[name: "$BRANCH_NAME"]], userRemoteConfigs: [[url: "$GIT_REPO", credentialsId: GIT_CREDENTIAL_ID]]])
                        }
                    }
                }
            }
        }
         stage('SONAR QUBE') {
            steps {
                // Run the SonarQube scanner to analyze the code
                script {
                    def scanner = tool name: 'sonarqube', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                    withEnv(["PATH+SONAR_RUNNER=${scanner}/bin"]) {
                       dir('DevOps_Project') { 
                        sh 'mvn clean verify sonar:sonar -Dsonar.host.url=http://192.168.33.10:9000 -Dsonar.login=sqa_4a8a2f824e2d4c5d25101d09ecd5818dce546bb9'
                        'mvn clean verify sonar:sonar -Dsonar.host.url=http://192.168.33.10:9000 -Dsonar.login=Devops-token'
                    }
                    }
                }
            }
        }

    } 
} 